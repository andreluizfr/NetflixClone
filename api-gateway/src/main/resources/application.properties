spring.application.name=api-gateway
server.port=5050

#eureka.client.service-url.defaultZone=http://eureka:8761/eureka/
#If we set this property as true, then while the server starts, the inbuilt client will try to register itself with the Eureka server.
#eureka.client.register-with-eureka=false 
#If we configure this property as true, the inbuilt client will try to fetch the Eureka registry, which isn’t available yetwhich isn’t available yet
#eureka.client.fetch-registry=false

api.security.token.jwtSecret=my-secret-key
#30min
api.security.token.jwtExpirationTime=1800000

spring.datasource.url=jdbc:postgresql://postgres:5432/netflixClone
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#É necessário que o sql rode depois que o hibernate tenha criado as tabelas
#spring.jpa.defer-datasource-initialization=true
#Resolver problema de failed to lazily initialize a collection of role
spring.jpa.open-in-view=true
#Para acentos no data.sql serem salvos corretamente
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8

#Para emojis
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true