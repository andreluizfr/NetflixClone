server:
    port: 5252
    servlet:
        encoding:
            charset: UTF-8
            enabled: true
            force: true
    tomcat:
        max-swallow-size: -1

management:
    endpoints:
        web:
            exposure:
                include: '*'
    endpoint:
        health:
            enabled: true 
            show-details: always

spring:
    application:
        name: media-api
    profiles:
        active: dev
    devtools:
        restart:
            enabled: false
    servlet:
        multipart:
            max-file-size: 500MB
            max-request-size: 500MB
            resolve-lazily: true
    datasource:
        url: jdbc:postgresql://localhost:5432/netflixClone
        username: postgres
        password: admin
        initialization-mode: always
    sql:
        init:
            mode: always
            encoding: UTF-8
            data-locations: import_active_users.sql,import_inactive_users.sql
    jpa:
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                envers:
                    audit_table_suffix: _aud
                    audit_strategy: org.hibernate.envers.strategy.ValidityAuditStrategy
                    audit_strategy_validity_end_rev_field_name: end_revision
                    audit_strategy_validity_store_revend_timestamp: true
                show_sql: true
                format_sql: true
                #SQL: DEBUG
        hibernate:
            ddl-auto: validate
        show-sql: true
        open-in-view: true
        #defer-datasource-initialization: true #se quiser que a criação da tabela seja feita antes de data.sql for rodado
    cache:
        type: redis
    redis:
        host: localhost
        port: 6379
        password: netflixredis6379
    kafka:
        bootstrap-servers: localhost:9092
    flyway:
        locations: classpath:db/migration
        baselineOnMigrate: true
        table: flyway_history_media_api

eureka:
    client:
        serviceUrl:
            defaultZone: http://localhost:5050/eureka
        register-with-eureka: true
    instance:
        hostname: localhost
        preferIpAddress: true
        lease-renewal-interval-in-seconds: 15
    
api:
    security:
        token:
            jwtSecret: my-secret-key

aws: 
    accessKeyId: ${AWS_ACCESS_KEY_ID}
    secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
    #sessionToken:

    bucketName: netflix-clone-2
    mediaStreamingDir: /streamingTracks
    cloudFrontDomain: d1hlsc6afcywvp.cloudfront.net
    cloudfrontKeyPairId: ${AWS_CLOUDFRONT_KEY_PAIR_ID}
    cloudfrontPrivateKey: ${AWS_CLOUDFRONT_PRIVATE_KEY}
