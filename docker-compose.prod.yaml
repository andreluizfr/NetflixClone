version: "3"

services:

  api-gateway:
    container_name: api-gateway-container
    build: ./api-gateway
    ports:
      - 5050:5050
    depends_on:
      - user-service
      - content-manager-service
    environment:
      - JAVA_OPTS="-Ddebug -Xmx128m"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 128M

  content-manager-service:
    container_name: content-manager-service-container
    build: ./content-manager-service
    ports:
      - 5151:5151
    depends_on:
      - postgres
      - redis
      - eureka
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.12'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 128M

  user-service:
    container_name: user-service-container
    build: ./user-service
    ports:
      - 5252:5252
    depends_on:
      - postgres
      - redis
      - eureka
    environment:
      - JAVA_OPTS="-Ddebug -Xmx128m"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.16'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 128M

  media-service:
    container_name: media-service-container
    build: ./media-service
    ports:
      - 5353:5353
    depends_on:
      - postgres
      - redis
      - eureka
    environment:
      - JAVA_OPTS="-Ddebug -Xmx128m"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.16'
          memory: 324M
        reservations:
          cpus: '0.02'
          memory: 128M
  
  messaging-service:
    container_name: messaging-service-container
    build: ./messaging-service
    ports:
      - 5454:5454
    depends_on:
      - postgres
    environment:
      - JAVA_OPTS="-Ddebug -Xmx64m"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.08'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 64M

  payment-service:
    container_name: payment-service-container
    build: ./payment-service
    ports:
      - 5555:5555
    depends_on:
      - postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.08'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 64M

  recommendation-service:
    container_name: recommendation-service-container
    build: ./recommendation-service
    ports:
      - 5656:5656
    depends_on:
      - postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 64M

  web-app:
    container_name: web-app-container
    build: ./web-app
    ports:
      - 8080:8080
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.12'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M
  
  web-cms-app:
    container_name: web-cms-app-container
    build: ./web-cms-app
    ports:
      - 80:80
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 128M
  
  postgres:
    container_name: postgres-container
    image: postgres:15.0
    restart: always
    tty: true
    volumes:
      - .pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=netflixClone
    ports:
      - 5433:5432
    deploy:
      resources:
        limits:
          cpus: '0.04'
          memory: 64M
        reservations:
          cpus: '0.01'
          memory: 32M

  redis:
    container_name: redis-container
    hostname: redis
    image: redis:7.2
    command: redis-server --requirepass netflixredis6379
    ports:
      - 6379:6379
    deploy:
      resources:
        limits:
          cpus: '0.04'
          memory: 64M
        reservations:
          cpus: '0.01'
          memory: 32M

  eureka:
    container_name: eureka-container
    hostname: eureka
    image: springcloud/eureka
    ports:
      - 8761:8761
    environment:
      #- SPRING_PROFILES_ACTIVE=peer1
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_INSTANCE_NON_SECURE_PORT=8761
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 128M

  kafka:
    image: 'bitnami/kafka:3.3.1'
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
    volumes:
      - .kafka:/bitnami/kafka
    healthcheck:
      test: "kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1"
      retries: 100
      interval: 10s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 240s
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.02'
          memory: 128M

  schema-registry:
    image: bitnami/schema-registry:7.5
    container_name: schema-registry-container
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schemaregistry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    ports:
      - 8081:8081
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.08'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 64M